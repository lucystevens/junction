# This workflow does all the tagging, building, publishing etc. around a new release

name: release

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'

env:
  GH_USER: lucystevens
  DOCKERHUB_USERNAME: lucystevens
  PROJECT_NAME: brewery-api

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - name: Checkout current tag
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Write project properties to env file
        run: ./gradlew exportProperties

      # TODO check project version against tag, must match

      - name: Build jar
        run: ./gradlew shadowJar

      # Docker build

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

        # Push docker artifact to repo

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: |
            ${{ env.DOCKERHUB_USERNAME }}/${{ env.PROJECT_NAME }}:${{ env.PROJECT_VERSION }}
            ${{ env.DOCKERHUB_USERNAME }}/${{ env.PROJECT_NAME }}:latest
          build-args: |
            PROJECT_NAME=${{ env.PROJECT_NAME }}
            PROJECT_VERSION=${{ env.PROJECT_VERSION }}
            

      # deploy to server

      - name: Deploy service
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: deployer
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          script: /services/docker-deploy.sh ${{ env.DOCKERHUB_USERNAME }}/${{ env.PROJECT_NAME }}:${{ env.PROJECT_VERSION }} -p 9002:8000

      # Create a release and upload the jar to it

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ env.PROJECT_VERSION }}
          release_name: Release ${{ env.PROJECT_VERSION }}
          body_path: changelog.md

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/libs/${{ env.PROJECT_NAME }}-${{ env.PROJECT_VERSION }}.jar
          asset_name: ${{ env.PROJECT_NAME }}-${{ env.PROJECT_VERSION }}.jar
          asset_content_type: application/java-archive